package GUI;

import Negocio.Componentes.Componente;
import Negocio.Componentes.ComponenteOpcional;
import Negocio.ConfiguraFacil;
import Negocio.Configuracoes.*;

import java.awt.Component;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * @author Jaime Leite, João Marques, Nuno Rei e Rafael Lourenço
 * @version 12-2018
 */
public class PapGUI extends javax.swing.JFrame {
    private Component controllingFrame;
    private ConfiguraFacil d;
    private Configuracao auxC;
    private DefaultListModel model1;
    private DefaultListModel model2;
    
    /**
     * Criação do estado da janela PapGUI
     * @param f
     * @param c 
     */
    public PapGUI(ConfiguraFacil f,Configuracao c) {
        this.d = f;
        this.auxC = c;
        this.model1 = new DefaultListModel();
        this.model2 = new DefaultListModel();
        this.d.getComponentesOpcionais().forEach(a->{
            if(!this.auxC.getComponentesOpcionais().contains(a.getID()))
                this.model1.addElement(a.getNome());
        });
        this.auxC.getComponentesOpcionais().forEach(s->{
            this.model2.addElement(this.d.getComponente(s).getNome());
        });
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Papyrus", 1, 50)); // NOI18N
        jLabel1.setText("Escolha os Componentes Opcionais:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 30, -1, -1));

        jList1.setModel(model1);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 560, 260));

        jLabel3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 18)); // NOI18N
        jLabel3.setText("Todos os componentes Opcionais disponiveis:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 510, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 18)); // NOI18N
        jLabel4.setText("Componentes Opcionais Selecionados:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 210, -1, -1));

        jList2.setModel(model2);
        jScrollPane2.setViewportView(jList2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 250, 580, 260));

        jButton3.setText("Concluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 580, 130, 90));

        jLabel5.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 24)); // NOI18N
        jLabel5.setText("SUB TOTAL:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 120, -1, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 24)); // NOI18N
        jLabel7.setText(String.valueOf(auxC.getPreco()));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 110, 210, 50));

        jLabel6.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 24)); // NOI18N
        jLabel6.setText("€");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 120, -1, -1));

        jButton4.setText("Voltar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 580, 140, 90));

        jLabel2.setFont(new java.awt.Font("Lucida Sans Typewriter", 2, 14)); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 530, 1260, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/black-and-white-desktop-wallpaper-hd-wallpaper-1000195.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 3210, 1700));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Escolheu terminar a configuração
     * @param evt 
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String s = this.d.verificaCompPacote(this.auxC);
        if(s != null) {
            Object[] options = {"Sim","Nao"};
            int result = JOptionPane.showOptionDialog(null,"Existe o "+s+" igual aos Componentes selecionados.\nDeseja substituir?"
                ,"COMPONENTES IGUAIS A PACOTE",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE,null,options,null);
            if(result == JOptionPane.YES_OPTION) {
                this.auxC = this.d.remCompOp(this.auxC);
                this.auxC = this.d.addPacote(this.auxC,s);
            }
        }
        try {
            this.d.insereConfiguracao(this.auxC);
            JOptionPane.showMessageDialog(this.controllingFrame,"Configuração adicionada com sucesso.\nCusto total: "
                +Double.toString(this.auxC.getPreco()),"CONFIGURAÇÃO ADICIONADA",JOptionPane.INFORMATION_MESSAGE);
        }
        catch (ConfCheiaException e) {
            JOptionPane.showMessageDialog(this.controllingFrame,"Fila de configurações está cheia."
                ,"FILA CONFIGURAÇÃO CHEIA",JOptionPane.ERROR_MESSAGE);
        }
        finally {
            dispose();
            Configuracao nova = this.d.criarConfiguracao();
            CriarConfGUI a = new CriarConfGUI(this.d,nova);
            a.execCriarConfGUI();
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    
    /**
     * Escolheu voltar para a escolha dos componentes essenciais
     * @param evt 
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.auxC = this.d.remCompOp(this.auxC);
        dispose();
        CriarConfGUI a = new CriarConfGUI(this.d,this.auxC);
        a.execCriarConfGUI();
    }//GEN-LAST:event_jButton4ActionPerformed
    
    /**
     * Escolheu um componente a adicionar a configuração
     * @param evt 
     */
    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        Componente c = this.d.getComponenteNome(this.jList1.getSelectedValue());
        //ComponenteOpcional aux = (ComponenteOpcional)c;
       // System.out.println(aux.getNecessidades());
        if(c!=null) {
            this.jLabel2.setText(c.getDescricao());
            if(evt.getClickCount()== 2){
                ComponenteOpcional aux=null;
                if (c instanceof ComponenteOpcional) {
                aux =(ComponenteOpcional) c;
                }
                if(aux==null)
                     JOptionPane.showMessageDialog(this.controllingFrame,"Erro ao selecionar Componente","INFORMAÇÃO",JOptionPane.INFORMATION_MESSAGE);
                List<String> ness = d.calculaNecessidades(this.auxC,aux);
                ness.add(aux.getID());
                List<String> incomp = d.calculaIncompatibilidades(this.auxC,ness);
                ness.remove(aux.getID());
                if (!ness.isEmpty() || !incomp.isEmpty()){
                    StringBuilder sbn = new StringBuilder();
                    ness.forEach(n->{sbn.append(this.d.getComponente(n).getNome());sbn.append("\n");});
                    StringBuilder sbi = new StringBuilder();
                    incomp.forEach(n->{sbi.append(this.d.getComponente(n).getNome());sbi.append("\n");});
                    Object[] options = {"SIM","NÃO"};
                    int result = JOptionPane.showOptionDialog(null,"Este Componente necessita dos seguintes componentes:\n"+
                        sbn.toString()+"\nE tem as seguintes incompatibilidades:\n"+sbi.toString()+
                            "\nDeseja adicionar as necessidades e remover as imcompatibilidades?","NECESSIDADES E INCOMPATIBILIDADES",
                                JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE,null,options,null);
                    if (result == JOptionPane.YES_OPTION) {
                        ness.add(aux.getID());
                        this.auxC = this.d.remComponentes(this.auxC,incomp);
                        this.auxC = this.d.addComponente(this.auxC,ness);
                        dispose();
                        execPapGUI();
                    }
                }
                else {
                    ness.add(aux.getID());
                    this.auxC = this.d.addComponente(this.auxC,ness);
                    dispose();
                    execPapGUI();
                } 
            }  
        }          
    }//GEN-LAST:event_jList1MouseClicked
    
    public void execPapGUI() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(()->{new PapGUI(this.d,this.auxC).setVisible(true);});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}